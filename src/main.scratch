(include "src/linalg.scratch")

(macro POINT-COLOR 0xaa0000)
(macro LINE-COLOR 0x000000)
(macro POINT-SIZE 7)
(macro LINE-SIZE 3)
(macro PROJECTION-SCALE 100)
(macro INITIAL-CAMERA-POSITION (Vec3 0 0 -1))
(macro MOVEMENT-SPEED 5)
(macro TURN-SPEED 250)

(macro cam.pos (Vec3 cam.x cam.y cam.z))

(sprite "Stage"
  (costumes "backdrop" "assets/blank.png"))

(sprite "main"
  (costumes "blank" "assets/blank-but-nonzero-sized.svg")

  (variables cam.x cam.y cam.z
             cam.pitch cam.yaw
             delta-time
             proj.x proj.y proj.z)

  (proc (when-flag-clicked)
    (v3-store cam.x cam.y cam.z INITIAL-CAMERA-POSITION)
    (:= cam.pitch 0)
    (:= cam.yaw 0)
    (forever
      (controls)
      (render)
      (:= delta-time timer)
      (reset-timer)))

  (proc (controls)
    (:= cam.yaw (mod (+ cam.yaw
                        (* TURN-SPEED delta-time
                           (- (pressing-key "h")
                              (pressing-key "l"))))
                     360))
    (+= cam.pitch (* TURN-SPEED delta-time
                     (- (pressing-key "k")
                        (pressing-key "j"))))
    (cond
      (> cam.pitch  180) (:= cam.pitch  180)
      (< cam.pitch -180) (:= cam.pitch -180))
    (v2-store+
      cam.x cam.z
      (v2-rotate
        cam.yaw
        (v2-scale (* MOVEMENT-SPEED delta-time)
                  (Vec2 (- (pressing-key "d")
                           (pressing-key "a"))
                        (- (pressing-key "w")
                           (pressing-key "s"))))))
    (+= cam.y (* MOVEMENT-SPEED delta-time
                 (- (pressing-key "e")
                    (pressing-key "q")))))

  (proc (render)
    (erase-all)
    (set-pen-color LINE-COLOR)
    (set-pen-size LINE-SIZE)
    (render-line 0 0 0 0 1 0)
    (render-line 1 0 0 1 0 1)
    (render-line 0 0 0 0 0 1)
    (render-line 0 0 1 0 1 1)
    (render-line 0 1 0 0 1 1)
    (render-line 0 1 0 1 1 0)
    (render-line 1 0 0 1 1 0)
    (render-line 0 1 1 1 1 1)
    (render-line 1 1 0 1 1 1)
    (render-line 0 0 0 1 0 0)
    (render-line 1 0 1 1 1 1)
    (render-line 0 0 1 1 0 1)
    (set-pen-color POINT-COLOR)
    (set-pen-size POINT-SIZE)
    (render-point 0 0 0)
    (render-point 0 0 1)
    (render-point 0 1 0)
    (render-point 0 1 1)
    (render-point 1 0 0)
    (render-point 1 0 1)
    (render-point 1 1 0)
    (render-point 1 1 1))

  (proc (project x y z)
    (v3-store proj.x proj.y proj.z
              (view-transform (Vec3 x y z)
                              cam.pos cam.pitch cam.yaw PROJECTION-SCALE)))

  (proc (render-point x y z)
    (project x y z)
    (when (> proj.z 0)
      (set-xy proj.x proj.y)
      (pen-down)
      (pen-up)))

  (proc (render-line x1 y1 z1 x2 y2 z2)
    (project x1 y1 z1)
    (set-xy proj.x proj.y)
    (pen-down)
    (project x2 y2 z2)
    (set-xy proj.x proj.y)
    (pen-up)))
